{"version":3,"sources":["src/CST.js","src/scenes/LoadScene.js","src/scenes/MenuScene.js","src/gameObjects/Projectiles.js","src/gameObjects/Units.js","src/gameObjects/Player.js","src/gameObjects/Enemy.js","src/scenes/PlayScene.js","src/main.js"],"names":["CST","SCENES","LOAD","MENU","PLAY","LoadScene","key","load","image","atlas","audio","loadingBar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","scene","start","Phaser","Scene","MenuScene","setOrigin","setDepth","startButton","bgmusic","sound","play","buttonCursor","setScale","setVisible","setInteractive","x","y","stop","Bullet","setTexture","speed","angle","xSpeed","ySpeed","timeAlive","shooter","mouseX","mouseY","setActive","setPosition","setAngle","body","rotation","Math","sign","nonZeroVelocity","time","delta","GameObjects","Image","Units","name","frame","healthPoints","range","sys","updateList","displayList","physics","world","enable","setCollideWorldBounds","Physics","Arcade","Sprite","Player","textureName","enableBody","createWeapon","input","attack","bullets","group","classType","runChildUpdate","bullet","get","children","shoot","removeWeapon","destroy","Enemy","target","setupMovement","moveEnemy","moveToObject","PlayScene","tilemapTiledJSON","enemyGroup","player","wolf","angel","building","University","pyramid","magicstone","sword_in_the_stone","anims","create","frameRate","frames","generateFrameNames","end","zeroPad","prefix","suffix","repeat","keyboard","addKeys","Mymap","tilemap","tiles1","addTilesetImage","tiles2","groundLayer","createStaticLayer","centerLayer","waterLayer","objectLayer","addonLayer","setBounds","widthInPixels","heightInPixels","cameras","main","startFollow","collider","overlap","overlaped","kill","removeCollider","active","W","isDown","setVelocityY","S","A","setVelocityX","D","isUp","velocity","Game","type","AUTO","default","arcade","debug","render","pixelArt"],"mappings":";;AQEA;;AACA;;ARHO,AQIP,IRJaA,GAAG,GAAE;AACdC,AKDJ,AJAA,ACAA,AKIA,EPHIA,MAAM,EAAG;AACLC,AQFR,IREQA,IAAI,EAAE,MADD;AAELC,AQGR,ADDA,IPFQA,AQGJgB,IRHQ,AQGJ,ERHM,CQGH,IAAIM,CRLF,KQKQ,CAACiI,IAAX,CAAgB;ARFnBtJ,AQGJuJ,EAAAA,ERHIvJ,EQGA,ERHI,AQGFqB,ERHI,IQGE,CAACmI,IADU;ARLd,AQOTtI,ADFJ,ECEIA,KAAK,EAAC,GAFiB;ARNT,AQSdD,CRTG,CQSHA,MAAM,EAAC,GAHgB;AAKvBkD,ADJJ,ECIIA,OAAO,EAAE;AACLsF,IAAAA,OAAO,EAAE,QADJ;AAGLC,ADNR,ICMQA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH;AAHH,GALc;AAYvBxI,EAAAA,KAAK,EAAC,CACHlB,oBADG,EACOsB,oBADP,EACiBwE,oBADjB,CAZiB;AAevB6D,EAAAA,MAAM,EAAC;AACHC,IJrBKlG,AIqBLkG,QAAQ,EAAE;AADP;AAfgB,CAAhB,CAAX;;IFNanE,AHAArD;ACEb;AAEI,ICFSqC,AJDAzE,ACAAsB,aEGGJ,KAAZ,EAAkBe,CAAlB,EAAoBC,CAApB,EAAsByB,IAAtB,EAA2BC,KAA3B,EAAoE;AAAA;;AEHpE,AHAA,ACGoE,QAAnCC,SEHrB3C,CHAAA,ECGwD,EEHpE,CHAA,CGAkBe,CAAlB,AHAkB,EGAEC,CAApB,EAAsBjC,GAAtB,EAA0ByE,WAA1B,EAAsCgB,MAAtC,EAA+D,mCFGjB,EAAsB;AEHL,AHA7C,ACGkD,QAAnBpD,KAAmB,uEAAb,CAAa;ACDpE,ADCoE,AHFpE,ACAA,QEEyDwB,KAAW,KCDxD5C,KAAZ,AJDa,ACAA,EGCKe,CAAlB,EAAoBC,CAApB,EAAsBjC,GAAtB,EAA0ByE,WAA1B,EAAyD,mCDCM,IAAK;AEHL,ADEN,AFFvC,AFCL,ACAA,QIDgCb,YAAkB,uEAAH,EAAG;AFGK;AEHL,ADEN,AFDrD,AFAS,ACAA,IKQJiC,IFP6BjC,YAAmB,4DFD/C3C,EFCA,ACAA,GCDN,EAAY,CAAZ,EAAc,CECmC,AFDjD,GECqD;ADErD,AHDIjB,ACAAA,MDAAA,ACAAA,GDAG,ACAA,EDAEN,ACAAA,SDAIC,ACAAA,MDAJ,ACAA,CDAWC,ACAAC,oDECdoB,KAAN,EAAYe,CAAZ,EAAcC,CAAd,EAAgByB,IAAhB,EAAqBC,KAArB;AEHA,ADCqD,AFCrD,ACGA1C,AHJM,ACAA,IEINA,CHLS,ACAA,IEKJ,CDHAmB,ACGC0B,GAAN,CAAUC,MDHV,CAAgB,GCGhB,CAAqBzD,GAArB,ODHA,EAHc,CAGmB,yCGF3BW,KAAN,EAAYe,CAAZ,EAAcC,CAAd,EAAgBjC,GAAhB,EAAoByE,WAApB,EAAgCgB,MAAhC,GAD2D,CAG3D;AFIAxE,AHFH,ACAA,IEEGA,KAAK,CAAC6C,GAAN,CAAUE,WAAV,CAAsB1D,GAAtB,gCAJgE,CAKhE;AEJAW,ADDA,ICCAA,KAAK,CAAC6C,GAAN,CAAUC,UAAV,CAAqBzD,GAArB,oDDDMW,KAAN,EAAYe,CAAZ,EAAcC,CAAd,EAAgBjC,GAAhB,EAAoByE,WAApB,GADqD,CAGrD;ACAAxD,AHDA,ACKAA,AGCJ,IDLIA,AFIAA,KEJK,AFIA,CEJC6C,AHDDzB,ACKC4B,GEJN,CAAUD,CHDV,ECKA,CDLa,ACKCE,CDLd,ICKA,AGCS,CHDWC,CEJpB,CAAsB7D,GAAtB,CFIA;ACHAW,AFDA,AIKS,IFJTA,KAAK,CAAC6C,AFDDxB,GECL,CAAUyB,CFDV,GAAa,CAAb,KECA,CAAqBzD,GAArB;ACCA,ADAAW,AFDA,ACIA,ICHAA,KAAK,CCAAK,ADACwC,AFDDvB,ACIA6B,GCHL,CAAUJ,EFDV,GGCA,AHDc,CGCC,AHDf,CGCA,EAAiB,CAAjB,CDAA,CCP2D,ADOrC1D,CCEtB,ALHE,ACAA,CDEL,ACAA,CGDG,EDGA,CAA2B,IAA3B,EAPgE,CAQhE;ADJA,AIGS,UJHJkC,MAAL,GAAc,CAAd,8DIIM;AFFN,AFDA,AIGOxC,MAAAA,GAAG,CFFLsB,AFDAmB,CIGM/C,QFFX,AFDA,CECe,AEEAC,CFFf,CFDiB,CECA,AFDjB,CECA,EEEW,CAAWG;ADDtBmB,AHVc,ACad,AGFM,IDDNA,CCAS,IDAJ,CAACgD,AFGDL,OEHL,CAAcM,IFGd,CEHA,CAAoBQ,CFGFd,IFHd,CDAC,IKAL,GFGA,6BEb2D,CAY3D;ADFA,AFAH,ACIG,AHJK,ACAD,AKEP,UFFQR,ADIAf,KAAL,GAAWA,KAAX,ECJA,GAAuB;ACGvB,ADHwBL,ADKxB,MCLwBA,CAAC,EAAC,CCGrB4B,ADHkB,ADKlBC,KAAL,GAAWA,IEFX,CFEA,EEFoBD,YAApB,CAb2D,CAe3D;ADL4B3B,ADPoC,AHShE,ACDA,MGD4BA,CAAC,EAAC;ACM9B,ADNuB,ADO1B,AHJG,ACDA,KGFA,CARqD,CAUrD,GCIKyD,CLHAzF,ACDAK,GAAL,CDCA,ACDSJ,CDCCA,ICDV,CDCA,ACDe,CDCC,ACDhB,CIIA,CAAmBe,AJJD,CAAlB,EAAqB,CDCrB,CKGA,CLHwB,CKGCwE,EJJzB,EAA6BnE,EII7B,OJJA,CAAuC,CAAvC,EAA0C,CAA1C,EAA6CC,EDC7C,MCDA,CAAsD,CAAtD,EAFI,CAIJ;ADAA,WAAKtB,IAAL,CAAUC,KAAV,CAAgB,IEFdwC,IIEG,KJFKC,AFEV,EAA+B,MEFdC,QAAO,YFExB;AKd2D,ADa3D3B,AFAA,AFEA,ACAA,AKAA,IFFAA,KAAK,CAACgD,AHEFzC,CCFCiB,AFEAxC,AMAAA,INAL,AMAA,CNAUC,AMAAA,CFFV,CAAcgE,EFAd,CFEA,ACAe,AKAf,CNAgB,AMAA,CFFhB,AFAiB,CEAGQ,AFApB,ADGA,KAAKpE,CDDL,AMAA,ENA0B,ACC1B,AKD0B,CLCjBJ,CGHT,IHGA,CAAe,KAAKW,IAAL,CAAUC,GDDzB,KCCe,CAAmBE,IKDlC,CLCe,GAAyB,CAAxC,EACI,KAAKH,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA0B,CAA1B,GAA4B,GADhC,EACqC,aADrC,EACoDQ,QADpD,CAC6D,CAD7D,CADA,CALI,CAUJ;AIHH,AHHG,AFEA,AMAA,EHhBmBJ,MAAM,CAACkD,EDcrBxB,AFEA5C,AMAAA,INAL,AMAA,CHhBmB,AHgBTC,AMAAA,CHhBwBoE,GDclC,CAAe,AFEf,AMAA,CNAgB,AMAA,CHhBG,CAAsBC,CDczC,GFEA,EAAuB,AMAvB,EAA0B,yBNA1B,MMAA;AFFA,AFCA,AFEA,ACIA,AKHA,UFJKI,AHODlD,CCNCK,AFEA7B,AMCAA,INDL,AMCA,CNDUE,AMCA2F,CLGC,GAAG,CCNd,AFEA,CIHA,AFCgB,AFEA,CIHE7E,EHOCS,CCNnB,EEDA,CJGA,CIfqD,AHmBvC,CGLd,AJCyB,ACIApB,CKHzB,CAA2B,CLGb,CAAe,KKH7B,EAAmC,ILGrB,CAAd,WDJA,EAAsD,KMCtD,uBNDA;AEAA,AFCA,ACIAmB,AKHH,MLGGA,KCLKqB,AFCA7C,ECIE,CAAC0B,CDJR,CAAUxB,ECIV,GDJA,CEDA,AFCgB,CEDCuC,MFCjB,CEDwB,CAACV,AFCA,CEDzB,EAA2BU,OAAO,CAACT,CAAnC,eFCA,EAAsD,4BAAtD;AEAA,AFCA,ACMA,UAAIL,CCPCmB,AFCA9C,IAAL,CAAUE,GEDV,CAAcuC,CFCd,CAAgB,ACMA,GAAG,ECPE,CAACM,AFCtB,EAAwB,ACMA1C,ECPV,CAAa2C,ADOR,CAAS/C,KAAT,CAAe,CCPlC,EANwB,ADaL,CCLnB,CDKuC,GAApB,EAAyB,MDN5C,EAAoD,ACMjC,CAAnB,0BDNA;AIFA,AJGA,ACMA0B,MAAAA,IGTKgC,CJGA3D,IAAL,CAAUE,ECME,CAAC0B,EDNb,CIHA,AJGgB,GIHI+B,EHSpB,CAAsB,IAAtB,CDNA,CKDU3C,CLCmB,EIH7B,ICEgBwE,QAAO,2BLCvB,EAAwE,gDAAxE;AKDuB,ADAvBxE,AFEI,AFAJ,ACMAW,IGRAX,EHQAW,GGRK,CAACgD,CFEGrC,AFAJtC,IIFL,AJEA,CIFYS,AJEFP,CEAN,CEFJ,AHQY,CGRG,AHQF2B,CCNK,CFAlB,CAAgB,GEAOO,IDMvB,AKNI,CJAc,ADMM,EGRxB,CFE+Ba,CEFF,AJE7B,CCMA,CDN8B,CEAK,CAACC,IAAL,CAAUT,GEFR,IFEe,CAACU,eAAR,CAAwBpB,CAAlC,CAA3B,SFAJ,EAA0E,2CAA1E;AIFmC,AFG/B,AFAJ,ACQAR,AKTI,MLSJA,KCRSgB,AFAJvC,IAAL,CAAUE,CEAN,ADQO,CAAC4B,ECRM,CFAlB,CAAgB,GEAOM,KAAL,CFAlB,CCQA,CCR+Ba,AFAJ,IEAQ,CAACC,IAAL,CAAUT,OAAO,CAACU,eAAR,CAAwBnB,CAAlC,CAA3B,GFAJ,EAAoE,wCAApE;AKFA,ADAI,AJGJ,ACSAT,MAAAA,IGZO,CJGFvB,IAAL,CIHY4E,AJGF1E,CCSC,CAACO,EAAZ,CDTA,ACSe,CGZX,AJGY,EIFR,MAAKmE,IJEb,ACSA,EGXQ,AJEsB,ACSA,YAAI,8BDTlC,EAA0E,2CAA1E;AKFA,ADCC,AFED,AFAA,ACSIjD,AKXJ,KFHA,GHcIA,ECTD,CGHE+D,ALGA1F,IEAGwC,AFAR,CAAUrC,IKHV,AJYgB,CDThB,ACSiB0B,CDTD,CKHC,CHGd,GAAiB,IAApB,ADSI,CAAwB,CCTH,AFAzB,EKHsB,ALGO,CCSzB,kCDTJ;AKFIb,ADpBiD,AFuBjD,AFAJ,ACSIW,AKXJ,QDDIX,AJYAW,GDTC3B,EKHI,AHGA4C,CGHCoB,CLGV,CAAU9D,ICSM,CIZZ,ALGJ,ACSiB6B,CIZC4D,AHGd,AFAY,ACSZ,CCTe,EDSEpE,GCTjB,MGHA,CAA2B,CJYC,CAACQ,CAAZ,GIZjB,AJYiC,CDTrC,CKHqCyD,AJYjC,CDTkC,KKHlC,mCLGJ,EAAgF,yCAAhF;AKFC,ADAJ,AFGO,AFAJ,ACSI7D,AKXJ,ODHA,CJcIA,GDTC3B,AMFA8F,EJEIjE,EFAT,CAAU1B,ICSM,CDThB,ACSiB6B,AKXjB,CNEgB,ACSZ,CCTA,CAAgB,AIFF,CLWGT,ICTjB,AIFmBlB,GAAL,CAASyE,CNE3B,EAA8B,ACSE,CAAC9C,CAA7B,AKXc,CAAe,mCNEjC,EAhBK,CAkBL;AKJH,AHGI,ADSA,AKZiCgD,OLQlC,CKRkCA,cAAc,EAAE;AJKrD,AFAG,ACSAzD,AKdiC,MLcjCA,CKdkB,CAAlB,CAHI,CNQAnB,AMHJ,OLYW,CAACK,EDTE,ACSd,CAAe,EDTE,KAAKJ,GAAL,CAASC,CCS1B,EAA6B,KDTZ,CAAkB,MCSF;ADR7BC,ACSAoB,QDTApB,ACSAoB,SDTS,EAAE,CCSC,CAACE,UAAb,CAAwB,KAAxB;ADRIrB,ACSP,AKbD,OLWA,GDPQA,CMJHuF,INIQ,EAAE,AMJf,GAAc,IAAIxB,KDDd,CACJ,GDFSvD,KEEK,CAAW,CFFV,GEED,EAAgB,GAAhB,EAAoB,GAApB,EAAyB,OAAzB,EAAkC,cAAlC,CAAd,CANI,CAQJ;ADDH,ADHkB,AJKA,ACafO,MAAAA,WAAW,CAACd,EAAZ,CAAe,MCZZ2C,KDYH,CCZQC,CDYoB,MCZd,MDYkB;ACXhC,AFHmC,ACgB/B,AKfJ,ONDiB,CAAjB,ACgBI,CDnCC,CAyBL,CEHKb,AIFAwD,ELeG,CAACvE,CKfT,GAAY,CLeR,CCbJ,ADaeC,EKfC6D,EJEElC,ADad,CAAgB,ICbpB,KIFY,CAAU,ELelB,EKfQ,EAAe,GAAf,EAAmB,GAAnB,EAAwB,MAAxB,EAAgC,aAAhC,EAA8C,KAAK0C,MAAnD,CAAZ;AFJA,AFOA,AIFA,UFLIlB,CFOC9C,AIFAkE,CJEL,IAAU,AIFV,CFLW,EEKC,CFLEjF,CFOCsB,EIFCiD,EFLG,CAACvB,CFOV,GAAcX,GEPV,CAAchD,CFO5B,AIFY,CAAU,CFLR,CAAkByE,EEKpB,EAAe,CFLb,CAAwB,CEK1B,EAAmB,GAAnB,EAAuB,OAAvB,EAA+B,cAA/B,EAA8C,KAAKiB,MAAnD,CAAZ;AFLuChB,AFQvC,AFEA,ACUIvD,AKdJ,QFNuCuD,AHoBnCvD,GCZCQ,AFEAhC,AMJA8F,CJEL,GFEA,ACUW,CCZD,AFEArF,ACUEwB,CGpBoC,CJUhD,CIVkDC,AJUrC,CCUT,CCZWK,AIFf,CAAgBlC,GAAhB,CAAoB,CJEV,EGJN,ALMJ,CEFwBgD,CFEC,AMJA2C,IJEzB,AIFA,GFNsC,GJUZtF,OAAD,EAAW;AKLpC,ADL0DsE,AJWtD5E,AMJJ,QFP0D4E,AJWtD5E,GMJC0F,ONIS,CAACnF,EMJf,CFPwE,AEOxDN,EFP0D,CEO1E,CAAoB,CNIhB,CAAoB,CAApB,EAAuB,AMJF4F,KNIM,AMJ/B,CNIgCrF,CMhB5B,CAcJ,ENE2B,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAAnD,EACoB,KAAI,CAACF,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2BL,OAD/C,EACwD,EADxD;AKJJ,ADPsC,AFUtC,AFIC,ACQG,OGtBU,AJUd,CIVA,AHsBI,ECZD,CGHEgF,EJeG,CAAC1E,CCZDwB,IDYJ,CIfJ,AJeevB,ICZZ,CDYC,CAAiBxB,CCZD,IAApB,EAAyB,EDYAC,MAAJ,CAAWG,IAA5B;AIdP,AHGO,AFQP,ACII,AKZD,OLMA,IKNKqG,EJAItD,MIAT,GJAI,AIAU,CJAK,GIADY,EJAd,EADqB,CAErB,OIDU,CAAU,IAAV,EAAe,IAAf,EAAoB,IAApB,EAAyB,WAAzB,CAAd;AFTA,AFWC,ADWJ,AKZG,WFVKoB,AEUAsB,MFVL,EEUA,CFVc,AEUAtE,QAAd,CAAuB,GFVL,CEUlB;AFTI,AFWP,AIDG,WAAKuE,CFVGlB,MAAM,GAAGJ,AEUjB,GAAgB,IFVQ,AEUJrB,CFVK0B,GAAR,EAAb,MEUY,CAAU,IAAV,EAAe,IAAf,EAAoB,CAApB,EAAsB,YAAtB,CAAhB;AFTIlE,AEUJ,QFVIA,GEUCmF,EFVI,CAAChB,OEUV,CFVI,AEUYvD,CFVGvB,GAAf,CAAmB4E,EJiBnB,CMPJ,CAAyB,EFVrB,CEUJ;AFTIA,AJiBJ,AMPA,ED1CmB/D,MAAM,ADgCrB+D,CChCsBb,ELiDrBpD,AMPAoF,GFVK,CAAChB,CChCQ,ALiDnB,CKjDkCf,ALiDvBpD,CMPX,EFVI,CAAa,AEUJ,CNOb,CKjDmB,ALiDFxB,CKjDwB6E,CC0CxBd,EFVb,EAAmBxC,GJiBFtB,EIjBO,CAACiF,EEUhB,CNOI,AMPM,CNOK/E,CIjBL,CAAYmC,CAA/B,AEUS,CNOb,CIjBsCf,AEUV,CAAf,EAAiB,CAAjB,CFV8B,CAAC2D,AEUZ,KFVM,CAAY3C,CAA9C,EEUS,CAAb;AFTC,AJiBJ,AMPG,EL1CuBd,KG4BvB,CH5B6B,CAACC,EK0CzBiF,OAAL,CAAaxE,QAAb,CAAsB,GAAtB;AACA,EJ5CoBV,MAAM,CAACoC,EI4CtB+C,SJ5Ce,CAAmB9C,AI4CvC,GAAgB,IAAIC,YAAJ,CAAU,IAAV,EAAe,CAAf,EAAiB,IAAjB,EAAsB,YAAtB,CAAhB;AFTA,AEUA,WFVK6B,AEUAgB,UAAL,CAAgBzE,CFVhB,GAAoB,IEUpB,CAAyB,GAAzB,EAvBI,CAwBJ,CFXwB;AAAE;AACtBiD,AEWJ,EN9CuB3D,MImCnB2D,AJnCyB,CAA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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export const CST ={\r\n    SCENES : {\r\n        LOAD: \"LOAD\",\r\n        MENU: \"MENU\",\r\n        PLAY: \"PLAY\"   \r\n    }\r\n}","import {CST} from \"../CST\";\r\nexport class LoadScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n    init(){\r\n        \r\n    }\r\n\r\n    preload(){\r\n\r\n        //add Loading image, sound and spritesheet\r\n        this.load.image('key1', './assets/title_bg.jpg');\r\n        this.load.image(\"StartButton\", \"./assets/StartButton.png\");\r\n        this.load.image(\"cursor\", \"./assets/fight.png\");\r\n        this.load.image(\"fire\",\"./assets/SkillEffect1.png\");\r\n        this.load.atlas(\"angle\", \"./assets/sprite/angle.png\", \"./assets/sprite/angle.json\");\r\n        this.load.atlas(\"magic\", \"./assets/sprite/magic.png\", \"./assets/sprite/magic.json\");\r\n        this.load.atlas(\"wolf\", \"./assets/sprite/wolf.png\", \"./assets/sprite/wolf.json\");\r\n        this.load.atlas(\"building1\", \"./assets/sprite/buildings/building1.png\", \"./assets/sprite/buildings/building1_atlas.json\");\r\n        this.load.atlas(\"University\", \"./assets/sprite/buildings/University.png\", \"./assets/sprite/buildings/University.json\");\r\n        this.load.atlas(\"pyramid\", \"./assets/sprite/buildings/pyramid.png\", \"./assets/sprite/buildings/pyramid.json\");\r\n        this.load.atlas(\"magicstone\", \"./assets/sprite/buildings/magicstone.png\", \"./assets/sprite/buildings/magicstone.json\");\r\n        this.load.audio(\"menuMusic\", \"./assets/music/Rise of spirit.mp3\");\r\n        this.load.atlas(\"sword_in_the_stone\", \"./assets/sprite/sword_in_the_stone.png\", \"./assets/sprite/sword_in_the_stone.json\");\r\n        this.load.audio(\"beginsound\", \"./assets/soundeffect/metal-clash.wav\");\r\n\r\n        //add loading bar\r\n        let loadingBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff\r\n            }\r\n        })\r\n\r\n        //add Loading event\r\n        this.load.on(\"progress\", (percent)=>{\r\n            loadingBar.fillRect(0, this.game.renderer.height / 2, \r\n                                this.game.renderer.width * percent, 50);\r\n            \r\n        })\r\n\r\n\r\n\r\n   \r\n    }\r\n\r\n    create(){\r\n        this.scene.start(CST.SCENES.MENU);\r\n    }\r\n}","import { CST } from \"../CST\";\r\nexport class MenuScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: CST.SCENES.MENU\r\n        })\r\n    }\r\n    init(){\r\n\r\n    }\r\n\r\n    create(){\r\n        //add Main menu image\r\n        this.add.image(0, 0, \"key1\").setOrigin(0, 0).setDepth(0);\r\n\r\n        //add Start Button image\r\n        let startButton = \r\n        this.add.image(this.game.renderer.width/2, \r\n            this.game.renderer.height/2+100, \"StartButton\").setDepth(1);\r\n        \r\n        \r\n        //add background music\r\n        let bgmusic = this.sound.add(\"menuMusic\");\r\n        bgmusic.play();\r\n\r\n\r\n        let buttonCursor = this.add.image(100, 100, \"cursor\");\r\n        buttonCursor.setScale(0.03);\r\n        buttonCursor.setVisible(false);\r\n\r\n        \r\n        startButton.setInteractive();\r\n\r\n        startButton.on(\"pointerover\", ()=>{\r\n            buttonCursor.setVisible(true);\r\n            buttonCursor.x = startButton.x - 90;\r\n            buttonCursor.y = startButton.y;\r\n        })\r\n\r\n        startButton.on(\"pointerout\", ()=>{\r\n            buttonCursor.setVisible(false);\r\n        })\r\n\r\n\r\n        startButton.on(\"pointerup\", ()=>{\r\n            \r\n            this.sound.play(\"beginsound\");\r\n            bgmusic.stop();\r\n\r\n            this.scene.start(CST.SCENES.PLAY);\r\n        })\r\n    }\r\n}","export class Bullet extends Phaser.GameObjects.Image {\r\n    constructor(scene){\r\n        super(scene,0,0);\r\n\r\n        this.setTexture('Magic_01.png'); //Need to change to actual bullet\r\n        this.speed = 1;\r\n        this.angle = 0;\r\n        this.xSpeed = 1;\r\n        this.ySpeed = 1;\r\n        this.timeAlive = 0;\r\n        \r\n    }\r\n\r\n    shoot(shooter,mouseX,mouseY){\r\n        this.timeAlive = 0;\r\n        this.setActive(true);\r\n        this.setVisible(true);\r\n\r\n        this.setPosition(shooter.x,shooter.y);\r\n        this.setAngle(shooter.body.rotation);\r\n        \r\n        //Shoots in the direciton the player is facing. \r\n            this.xSpeed = this.speed * Math.sign(shooter.nonZeroVelocity.x); \r\n            this.ySpeed = this.speed * Math.sign(shooter.nonZeroVelocity.y);\r\n       \r\n        if(this.timeAlive > 2000){\r\n            this.setActive(false);\r\n            this.setVisible(false);\r\n        }\r\n    \r\n    }\r\n\r\n    update(time,delta){\r\n        this.timeAlive += delta;\r\n        this.x += this.xSpeed * delta;\r\n        this.y += this.ySpeed * delta;\r\n        \r\n        if(this.timeAlive > 2000){\r\n            this.setActive(false);\r\n            //this.setVisible(false);\r\n        }\r\n    }\r\n\r\n}","\r\nexport class Units extends Phaser.Physics.Arcade.Sprite  {\r\n// init the units properties\r\n    \r\n    constructor(scene,x,y,name,frame,healthPoints=10,speed=1,range=null){\r\n        super(scene,x,y,name,frame);\r\n\r\n        scene.sys.updateList.add(this);\r\n        scene.sys.displayList.add(this);\r\n        //this.setScale(1);\r\n        scene.physics.world.enable(this);\r\n        this.setCollideWorldBounds(true);\r\n        //this.setImmovable(true);\r\n        \r\n        this.healthPoints=healthPoints;\r\n        this.speed=speed;\r\n        this.range=range;\r\n     \r\n    }\r\n\r\n\r\n    \r\n}","import { Bullet } from \"../gameObjects/Projectiles\";\r\n\r\nexport class Player extends Phaser.Physics.Arcade.Sprite{\r\n    constructor(scene,x,y,key,textureName,healthPoints = 100){\r\n        super(scene,x,y,key,textureName);\r\n\r\n        //adds to the scenes update and display list\r\n        scene.sys.updateList.add(this);\r\n        scene.sys.displayList.add(this);\r\n\r\n        this.setOrigin(0,0);\r\n        this.nonZeroVelocity = {x:0,y:1};\r\n\r\n        //enables body in the phsyics world in the game\r\n        scene.physics.world.enableBody(this);\r\n        this.createWeapon(scene);\r\n\r\n        //Create intial Healthpoints for the player\r\n        this.healthPoints = healthPoints;\r\n\r\n        scene.input.on('pointerdown',()=>{ //pointerdown event handler\r\n            if(this.attack)\r\n                this.attack();\r\n        });\r\n    }\r\n\r\n    createWeapon(scene){\r\n        let bullets = scene.physics.add.group({classType: Bullet, runChildUpdate: true});\r\n\r\n        this.attack = ()=>{\r\n            let bullet = bullets.get();\r\n            scene.children.add(bullet);\r\n            bullet.shoot(this, scene.input.x, scene.input.y);\r\n        };\r\n\r\n        this.removeWeapon = ()=>{ //destroys the weapon used\r\n            bullets.destroy();\r\n            this.attack = null;\r\n        };    \r\n\r\n    }\r\n\r\n    kill(){\r\n        //Remove a player so we can handle other things related to the death such as removing the wepopn\r\n        this.removeWeapon();\r\n        this.destroy();\r\n    }\r\n\r\n}","export class Enemy extends Phaser.Physics.Arcade.Sprite{\r\n    constructor(scene,x,y,key,textureName,target,healthPoints = 50){\r\n        super(scene,x,y,key,textureName,target);\r\n\r\n        //adds to the scenes update and display list\r\n        scene.sys.updateList.add(this);\r\n        scene.sys.displayList.add(this);\r\n\r\n        this.setOrigin(0,0);\r\n\r\n        //enable body in physics game\r\n        scene.physics.world.enableBody(this);\r\n\r\n        //Health\r\n        this.healthPoints = healthPoints;\r\n        \r\n        //setup the movement of the enemy\r\n        this.setupMovement(scene,target);\r\n    }\r\n\r\n    setupMovement(scene,target){\r\n        //sets up the movement funciton that is called by the update method.\r\n        this.moveEnemy = () =>{\r\n            scene.physics.moveToObject(this, target);\r\n        };\r\n    }\r\n\r\n    attack(){\r\n        //Add an attack ability.\r\n    }\r\n\r\n    update(){\r\n        //We can add a check so if the enemy is within a certain distance of a player it can launch an attack.\r\n\r\n        this.moveEnemy();\r\n    }\r\n}","//Play scene for our basic playground\r\n//All the functions and character added in this file will be temporary\r\n//just for demo\r\n//Use scene list to generate keyword\r\nimport { CST } from \"../CST\";\r\nimport { Bullet } from \"../gameObjects/Projectiles\";\r\nimport { Units } from \"../gameObjects/Units\";\r\nimport {Player} from \"../gameObjects/Player\";\r\nimport {Enemy} from \"../gameObjects/Enemy\";\r\n\r\nexport class PlayScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({key:CST.SCENES.PLAY});\r\n    }\r\n\r\n    preload(){ \r\n        this.load.image(\"tiles1\", \"./assets/tiles/map_atlas.png\");\r\n        this.load.image(\"tiles2\", \"./assets/tiles/map_atlas2.png\");\r\n\r\n        this.load.tilemapTiledJSON(\"Mymap\",\"./assets/map/map.json\");\r\n    }\r\n\r\n    create(){\r\n        //Create an enemygroup with runChildUpdate set to true. Every enemy added to this group will have its update function then called. \r\n        //Without this groupt the update funciton would not be called for the enemies\r\n        this.enemyGroup = this.add.group({runChildUpdate: true}); \r\n\r\n        //create phaser game object, and add in sprite\r\n        this.player = new Player(this,300,300, \"magic\", \"Magic_01.png\");\r\n\r\n        //The enemies wolf and angel. \r\n        this.wolf = new Enemy(this,100,100, \"wolf\", \"Wolf_01.png\",this.player);\r\n        this.angel= new Enemy(this,200,150,\"angle\",\"angle_01.png\",this.player);\r\n        this.enemyGroup.add(this.wolf);\r\n        this.enemyGroup.add(this.angel);\r\n\r\n        //adding buildings for each player\r\n        \r\n        this.building=new Units(this,1200,1200,\"building1\");\r\n        this.building.setScale(0.15);\r\n        this.University=new Units(this,1200,0,\"University\");\r\n        this.University.setScale(1.5);\r\n        this.pyramid=new Units(this,0,0,\"pyramid\");\r\n        this.pyramid.setScale(1.5);\r\n        this.magicstone=new Units(this,0,1200,\"magicstone\");\r\n        this.magicstone.setScale(1.5);\r\n        //adding resrouces to the middle \r\n        this.sword_in_the_stone=new Units(this,645,645,\"sword_in_the_stone\");\r\n        this.sword_in_the_stone.setScale(0.5);\r\n        this.player.setCollideWorldBounds(true);\r\n\r\n        //create animations for different directions \r\n    \r\n\r\n        this.anims.create({\r\n            key: \"down\",\r\n            frameRate: 8,\r\n            //walking downward animation frames\r\n            frames: this.anims.generateFrameNames('magic', {\r\n            start:1, end:4, zeroPad:2,\r\n            prefix:'Magic_', suffix: '.png'\r\n            }),\r\n            repeat: -1\r\n        });\r\n        \r\n\r\n        this.anims.create({\r\n            key:'left', \r\n            frameRate: 8,\r\n            //walking left animation frames\r\n            frames: this.anims.generateFrameNames('magic', {\r\n            start:5, end:8, zeroPad:2,\r\n            prefix:'Magic_', suffix: '.png'\r\n            }),\r\n            repeat: -1\r\n        });\r\n\r\n        this.anims.create({\r\n            key:'right', \r\n            frameRate: 8,\r\n            //walking left animation frames\r\n            frames: this.anims.generateFrameNames('magic', {\r\n            start:9, end:12, zeroPad:2,\r\n            prefix:'Magic_', suffix: '.png'\r\n            }),\r\n            repeat: -1\r\n        });\r\n\r\n        this.anims.create({\r\n            key:'up',\r\n            frameRate: 8,\r\n            //walking left animation frames\r\n            frames: this.anims.generateFrameNames('magic', {\r\n            start:13, end:16, zeroPad:2,\r\n            prefix:'Magic_', suffix: '.png'\r\n            }),\r\n            repeat: -1\r\n        });\r\n\r\n        //input and phyics\r\n        this.keyboard = this.input.keyboard.addKeys(\"W, A, S, D\");\r\n\r\n        \r\n        //add in our map\r\n        let Mymap = this.add.tilemap(\"Mymap\");\r\n\r\n        let tiles1 = Mymap.addTilesetImage(\"map_atlas\", \"tiles1\");\r\n        let tiles2 = Mymap.addTilesetImage(\"map_atlas2\", \"tiles2\");\r\n\r\n        //display layers\r\n        let groundLayer = Mymap.createStaticLayer(\"GroundLayer\", [tiles1], 0 , 0).setDepth(-1);\r\n        let centerLayer = Mymap.createStaticLayer(\"Center\", [tiles2], 0 , 0).setDepth(-1);\r\n        let waterLayer = Mymap.createStaticLayer(\"Water\", [tiles1], 0 , 0).setDepth(-1);\r\n        let objectLayer = Mymap.createStaticLayer(\"Objects\", [tiles1], 0 , 0).setDepth(-1);\r\n        let addonLayer = Mymap.createStaticLayer(\"AddOn\", [tiles1], 0 , 0).setDepth(-1);\r\n\r\n\r\n        //Camera\r\n        // set bounds to avoid camera goes outside the map\r\n        this.physics.world.setBounds(0, 0, Mymap.widthInPixels, Mymap.heightInPixels);\r\n\r\n        //camera follows the player\r\n        this.cameras.main.startFollow(this.player);\r\n\r\n\r\n        //If it gets the character, character dies\r\n        let collider = this.physics.add.overlap(this.wolf, this.player, (overlaped) =>{\r\n            //stop when they overplay, kill the player(test)\r\n            overlaped.body.stop();\r\n            this.player.kill();\r\n            this.physics.world.removeCollider(collider);\r\n        }, null, this);\r\n\r\n    }\r\n\r\n    update(time,delta) {\r\n        \r\n        //key control\r\n        //movement note: we should only be able to move our character when it is alive\r\n\r\n        if(this.player.active){\r\n            if(this.keyboard.W.isDown){\r\n                this.player.setVelocityY(-64);\r\n                this.player.play(\"up\", true);\r\n            }\r\n            if(this.keyboard.S.isDown){\r\n                this.player.setVelocityY(64);\r\n                this.player.play(\"down\", true);\r\n            }\r\n            if(this.keyboard.A.isDown){\r\n                this.player.setVelocityX(-64);\r\n                this.player.play(\"left\", true);\r\n            }\r\n            if(this.keyboard.D.isDown){\r\n                this.player.setVelocityX(64);\r\n                this.player.play(\"right\", true);\r\n            }\r\n            if(this.keyboard.W.isUp && this.keyboard.S.isUp){\r\n                this.player.setVelocityY(0);\r\n\r\n            }\r\n            if(this.keyboard.A.isUp && this.keyboard.D.isUp){\r\n                this.player.setVelocityX(0);\r\n\r\n            }\r\n\r\n            if(this.player.body.velocity.x != 0 || this.player.body.velocity.y != 0){\r\n                this.player.nonZeroVelocity = {x:this.player.body.velocity.x,y:this.player.body.velocity.y}; \r\n                //velocity unless the actual velocity is zero then it stores previous nonzero velocity\r\n                //Need this value to keep track of the current direction when player is standing still. Prob will chage this later to direction\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","/** @type {import { \"../typing/phaser\" };} */\r\n\r\nimport { LoadScene } from \"./scenes/LoadScene\";\r\nimport { MenuScene } from \"./scenes/MenuScene\";\r\nimport { PlayScene } from \"./scenes/PlayScene\";\r\n\r\nlet game = new Phaser.Game({\r\n    type: Phaser.AUTO,\r\n    width:800,\r\n    height:600,\r\n    \r\n    physics: {\r\n        default: 'arcade',\r\n        \r\n        arcade: {\r\n            debug: true\r\n        }\r\n    },\r\n    scene:[\r\n       LoadScene,MenuScene,PlayScene\r\n    ],\r\n    render:{\r\n        pixelArt: true\r\n    }\r\n});\r\n\r\n"]}